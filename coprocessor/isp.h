#ifndef ISP_H_
#define ISP_H_

// See "ISP protocol.md" for more information.


#define ISP_VERSION         0x0201
#define ISP_PREAMBLE        0xAA55

#define ISP_DATA_LENGTH_READ_REG          1
#define ISP_DATA_LENGTH_WRITE_REG         5
#define ISP_DATA_LENGTH_READ_BUS          6

#define ISP_STATUS_INVALID_PACKET_ID      0
#define ISP_STATUS_INVALID_REGISTER       0
#define ISP_STATUS_INVALID_DATA_LENGTH    0

typedef enum {
    ISP_PACKET_ID_READ_REG,
    ISP_PACKET_ID_WRITE_REG,
    ISP_PACKET_ID_READ_BUS,
    ISP_PACKET_ID_WRITE_BUS,
    ISP_PACKET_ID_WRITE_FLASH,
    ISP_PACKET_ID_SUCCESS = 0x10,
    ISP_PACKET_ID_FAILURE
} isp_packet_id;

typedef enum {
    ISP_REGISTER_STATUS,
    ISP_REGISTER_DEVICE_ID,
    ISP_REGISTER_FIRMWARE_VERSION,
    ISP_REGISTER_PROTOCOL_VERSION,
    ISP_REGISTER_CLOCK_SPEED,
    ISP_REGISTER_UART_SPEED,
    ISP_REGISTER_RESET_TIME,
    ISP_REGISTER_TIMEOUT,
    ISP_REGISTER_GPIO_TEST,
    ISP_REGISTER_RESET,
    ISP_REGISTER_BUS_HOLD,
    ISP_REGISTER_INTERRUPT
} isp_register;

#endif /* ISP_H_ */